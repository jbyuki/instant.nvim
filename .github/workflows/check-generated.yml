name: Test that lua files are generated from ntangle file
on: [push,pull_request]
jobs:
  Check-generated:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Prepare
        run: |
          sudo apt install fd-find
          test -d build || {
            mkdir -p build
            wget https://github.com/neovim/neovim/releases/download/v0.7.0/nvim.appimage
            chmod +x nvim.appimage
            mv nvim.appimage ./build/nvim
          }
          mkdir -p ~/.local/share/nvim/site/pack/vendor/start
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            git clone --depth 1 https://github.com/jbyuki/instant.nvim ~/.local/share/nvim/site/pack/vendor/start/instant.nvim
            cd ~/.local/share/nvim/site/pack/vendor/start/instant.nvim
            # https://github.com/actions/checkout/issues/58
            PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
            git fetch origin pull/${PR_NUMBER}/head:pr-branch
            git checkout pr-branch
            cd
          else
            git clone --depth 1 https://github.com/jbyuki/instant.nvim ~/.local/share/nvim/site/pack/vendor/start/instant.nvim
          fi
      - run: echo "Neovim has been installed."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Generate and diff
        run: |
          ./build/nvim --headless -c "lua require'ntangle'.tangle_all()" -c "exit"
          git diff --exit-code -- lua
      - run: echo "üçè This job's status is ${{ job.status }}."
